---
title: "Templates - NestUI"
---

.mainSection

  = partial "menu", locals: { current_page: "Templates" }
  .content
    %p
      Templates are just HtmlElements, that are used by Component constructors when a new component
      is being created manually (not by parsing the DOM after calling <span class="inlineCode">.initChildComponents()</span>.
    
    %p
      It is best explained by presenting a use case: let's say users of our site have the ability to post comments. When the page
      loads, we might have some comments already on the page - for those, <span class="inlineCode">CommentComponent</span>
      instances will be created automatically. However, when our user adds a new comment, we'll need to create a dom_element
      to be appended to the comment's list. In this case, we first create an instance of the CommentComponent, which will
      search the DOM for an element with <span class="inlineCode">data-component-template="CommentComponent"</span>,
      clone it and assign the newly created component's dom_element to the cloned element.

    %p
      After that, we can add this newly created component to some other component as a child, which will automatically append it
      to the parent's dom_element.

    %p
      Let's illustrate that with some code - and for simplicity reasons, we'll make it so that new comments always have the same text,
      there is no form to enter their text and they are added simply by clicking the button. First, the html code:

    %pre
      %code.block.language-markup= html_code_partial "templates_1_1.html"

    %p
      Notice that the element for the template is also automatically the first comment. While acceptable, it's
      not always desirable. If, for example, we were to delete all comments from the page, we would have no template,
      and trying to add a new comment would result in an error. Thus, perhaps it's better to make the template a separate
      element and to make it invisible:

    %pre
      %code.block.language-markup= html_code_partial "templates_1_2.html"

    %p
      And we are now ready to write the code that will actually create new comments when the button is
      clicked:

    %pre
      %code.language-dart= partial "code_partials/templates_1_3.dart"

    Now, the html code of our page will look like this:

    %pre
      %code.block.language-markup= html_code_partial "templates_1_4.html"

    %p
      The power of templates is that they are non-obligatory. You may have a fully functional app written without any templates.
      It is only when you need to dynamically add new components onto the page you need templates. Even then, in some cases,
      you might decide to use an existing visible element as a template (as shown in the first example), since this simplifies the page itself.
